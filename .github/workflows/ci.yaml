---
name: ci
on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
jobs:
  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v1
        with:
          config_file: .ci/yamllint.yml
          strict: true
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.docker_push.outputs.docker_tag }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - uses: actions/setup-go@v4
        with:
          go-version: 1.20.5
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 4
      - name: Memory usage
        run: free -m
      - name: List installed packages
        run: dpkg -la
      - name: Free Disk Space for Docker
        run: |
          df -h
          sudo apt-get remove aria2 azure-cli shellcheck rpm xorriso zsync \
               clang-16 lld-16 clang-format-16 \
               clang-17 lld-17 clang-format-17 \
               g++-9 g++-10 g++-12 g++-11 \
               gfortran-9 gfortran-10 gfortran-11 google-chrome-stable \
               google-cloud-sdk \
               imagemagick \
               libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional \
               mercurial apt-transport-https mono-complete \
               mysql-client libmysqlclient-dev \
               mysql-server unixodbc-dev yarn libssl-dev \
               libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
               php-common \
               php-pear \
               php8.3 \
               php8.3-amqp \
               php8.3-apcu \
               php8.3-bcmath \
               php8.3-bz2 \
               php8.3-cgi \
               php8.3-cli \
               php8.3-common \
               php8.3-curl \
               php8.3-dba \
               php8.3-dev \
               php8.3-enchant \
               php8.3-fpm \
               php8.3-gd \
               php8.3-gmp \
               php8.3-igbinary \
               php8.3-imagick \
               php8.3-imap \
               php8.3-interbase \
               php8.3-intl \
               php8.3-ldap \
               php8.3-mbstring \
               php8.3-memcache \
               php8.3-memcached \
               php8.3-mongodb \
               php8.3-msgpack \
               php8.3-mysql \
               php8.3-odbc \
               php8.3-opcache \
               php8.3-pcov \
               php8.3-pgsql \
               php8.3-phpdbg \
               php8.3-pspell \
               php8.3-readline \
               php8.3-redis \
               php8.3-snmp \
               php8.3-soap \
               php8.3-sqlite3 \
               php8.3-sybase \
               php8.3-tidy \
               php8.3-xdebug \
               php8.3-xml \
               php8.3-xsl \
               php8.3-yaml \
               php8.3-zip \
               php8.3-zmq \
               snmp pollinate libpq-dev powershell ruby-full nginx shim-signed \
               libnginx-mod-http-image-filter libmono-system-web4.0-cil monodoc-http \
               sphinxsearch subversion -yq --allow-remove-essential
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          sudo rm -rf /usr/local/lib/android
          sudo apt clean
          if [ -n "$(docker images -aq)" ]; then \
            docker rmi -f $(docker images -aq)
          fi
          df -h
      - name: Docker Build
        run: |
          echo "docker buildx build ."
          docker buildx build .

          docker buildx build -t vpp:version --target version --load .

          branch=${{github.event.workflow_run.head_branch}}
          if [[ $branch == *release/* ]]; then
            TAG=${branch#release/}
          else
            VPP_VERSION=$(docker run vpp:version)
            TAG=v${VPP_VERSION/\~/-}
          fi

          echo "TAG=${TAG}" >> $GITHUB_ENV
      - name: Generate files
        run: go generate ./...
      - name: Check for changes in generated code
        run: |
          git diff -- binapi || (echo "Rerun go generate ./... locally and resubmit" && exit -1)
      - name: Go Build
        run: go build ./...
      - name: Login to GitHub Container Registry
        id: docker_login
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Use the --push flag to publish the image. Currently, buildx only supports this way.
      - name: Docker Push
        id: docker_push
        if: steps.docker_login.outcome == 'success'
        run: |
          docker buildx build . \
            -t ghcr.io/${{github.repository}}/vpp:${TAG} \
            --target vpp --push
          docker buildx build . \
            -t ghcr.io/${{github.repository}}/vpp-dbg:${TAG} \
            --target vpp-dbg --push
          echo docker_tag=${TAG} >> $GITHUB_OUTPUT

  update_dependent_repositories:
    name: update_dependent_repositories
    needs: build
    if: ${{ github.event_name == 'push' }}
    uses: ljkiraly/govpp/.github/workflows/update-dependent-repositories.yaml@main
    with:
      docker_tag: ${{ needs.build.outputs.docker_tag }}
    secrets:
      token: ${{ secrets.BOT_TOKEN }}
